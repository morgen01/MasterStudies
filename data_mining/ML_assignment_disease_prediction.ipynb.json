{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "# Week 5 Assignment - Machine Learning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Prediction of Cardiovascular Disease using different Classification algorithms"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The dataset was downloaded from Kaggle (https://www.kaggle.com/sulianova/cardiovascular-disease-dataset) and consists of three classes of input features: results from medical tests, objective information and information obtained from the patient."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import seaborn as sns; sns.set\n",
    "from itertools import combinations\n",
    "\n",
    "# ML libraries\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.svm import SVC, LinearSVC\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "# metrics for assessing ML models\n",
    "from sklearn.metrics import classification_report, accuracy_score, confusion_matrix\n",
    "from sklearn.preprocessing import normalize\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.base import clone\n",
    "from sklearn.metrics import hinge_loss"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Exploratory Data Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "0   0  18393       2     168    62.0    110     80            1     1      0   \n",
       "1   1  20228       1     156    85.0    140     90            3     1      0   \n",
       "2   2  18857       1     165    64.0    130     70            3     1      0   \n",
       "3   3  17623       2     169    82.0    150    100            1     1      0   \n",
       "4   4  17474       1     156    56.0    100     60            1     1      0   \n",
       "\n",
       "   alco  active  cardio  \n",
       "0     0       1       0  \n",
       "1     0       1       1  \n",
       "2     0       0       1  \n",
       "3     0       1       1  \n",
       "4     0       0       0  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# load dataset from disk\n",
    "df=pd.read_csv('cardio_train.csv', sep=';')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 70000 rows and 13 columns in the data set\n"
     ]
    }
   ],
   "source": [
    "# retrieve number of rows and columns in the dataset\n",
    "nRow, nCol = df.shape\n",
    "print(f'There are {nRow} rows and {nCol} columns in the data set')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id               int64\n",
       "age              int64\n",
       "gender           int64\n",
       "height           int64\n",
       "weight         float64\n",
       "ap_hi            int64\n",
       "ap_lo            int64\n",
       "cholesterol      int64\n",
       "gluc             int64\n",
       "smoke            int64\n",
       "alco             int64\n",
       "active           int64\n",
       "cardio           int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# get data types of features\n",
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "      <td>70000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>49972.419900</td>\n",
       "      <td>19468.865814</td>\n",
       "      <td>1.349571</td>\n",
       "      <td>164.359229</td>\n",
       "      <td>74.205690</td>\n",
       "      <td>128.817286</td>\n",
       "      <td>96.630414</td>\n",
       "      <td>1.366871</td>\n",
       "      <td>1.226457</td>\n",
       "      <td>0.088129</td>\n",
       "      <td>0.053771</td>\n",
       "      <td>0.803729</td>\n",
       "      <td>0.499700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>28851.302323</td>\n",
       "      <td>2467.251667</td>\n",
       "      <td>0.476838</td>\n",
       "      <td>8.210126</td>\n",
       "      <td>14.395757</td>\n",
       "      <td>154.011419</td>\n",
       "      <td>188.472530</td>\n",
       "      <td>0.680250</td>\n",
       "      <td>0.572270</td>\n",
       "      <td>0.283484</td>\n",
       "      <td>0.225568</td>\n",
       "      <td>0.397179</td>\n",
       "      <td>0.500003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>10798.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>-150.000000</td>\n",
       "      <td>-70.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>25006.750000</td>\n",
       "      <td>17664.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>159.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>50001.500000</td>\n",
       "      <td>19703.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>165.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>74889.250000</td>\n",
       "      <td>21327.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>170.000000</td>\n",
       "      <td>82.000000</td>\n",
       "      <td>140.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>99999.000000</td>\n",
       "      <td>23713.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>16020.000000</td>\n",
       "      <td>11000.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 id           age        gender        height        weight  \\\n",
       "count  70000.000000  70000.000000  70000.000000  70000.000000  70000.000000   \n",
       "mean   49972.419900  19468.865814      1.349571    164.359229     74.205690   \n",
       "std    28851.302323   2467.251667      0.476838      8.210126     14.395757   \n",
       "min        0.000000  10798.000000      1.000000     55.000000     10.000000   \n",
       "25%    25006.750000  17664.000000      1.000000    159.000000     65.000000   \n",
       "50%    50001.500000  19703.000000      1.000000    165.000000     72.000000   \n",
       "75%    74889.250000  21327.000000      2.000000    170.000000     82.000000   \n",
       "max    99999.000000  23713.000000      2.000000    250.000000    200.000000   \n",
       "\n",
       "              ap_hi         ap_lo   cholesterol          gluc         smoke  \\\n",
       "count  70000.000000  70000.000000  70000.000000  70000.000000  70000.000000   \n",
       "mean     128.817286     96.630414      1.366871      1.226457      0.088129   \n",
       "std      154.011419    188.472530      0.680250      0.572270      0.283484   \n",
       "min     -150.000000    -70.000000      1.000000      1.000000      0.000000   \n",
       "25%      120.000000     80.000000      1.000000      1.000000      0.000000   \n",
       "50%      120.000000     80.000000      1.000000      1.000000      0.000000   \n",
       "75%      140.000000     90.000000      2.000000      1.000000      0.000000   \n",
       "max    16020.000000  11000.000000      3.000000      3.000000      1.000000   \n",
       "\n",
       "               alco        active        cardio  \n",
       "count  70000.000000  70000.000000  70000.000000  \n",
       "mean       0.053771      0.803729      0.499700  \n",
       "std        0.225568      0.397179      0.500003  \n",
       "min        0.000000      0.000000      0.000000  \n",
       "25%        0.000000      1.000000      0.000000  \n",
       "50%        0.000000      1.000000      0.000000  \n",
       "75%        0.000000      1.000000      1.000000  \n",
       "max        1.000000      1.000000      1.000000  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# retrieve descriptive statistics on feature columns\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id             0\n",
       "age            0\n",
       "gender         0\n",
       "height         0\n",
       "weight         0\n",
       "ap_hi          0\n",
       "ap_lo          0\n",
       "cholesterol    0\n",
       "gluc           0\n",
       "smoke          0\n",
       "alco           0\n",
       "active         0\n",
       "cardio         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check for missing values in feature columns\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are no missing values in the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The total ids are 70000, from those the unique ids are 70000 \n"
     ]
    }
   ],
   "source": [
    "# check for unique ID identifiers\n",
    "print(f\"The total ids are {df['id'].count()}, from those the unique ids are {df['id'].value_counts().shape[0]} \")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "0  18393       2     168    62.0    110     80            1     1      0   \n",
       "1  20228       1     156    85.0    140     90            3     1      0   \n",
       "2  18857       1     165    64.0    130     70            3     1      0   \n",
       "3  17623       2     169    82.0    150    100            1     1      0   \n",
       "4  17474       1     156    56.0    100     60            1     1      0   \n",
       "\n",
       "   alco  active  cardio  \n",
       "0     0       1       0  \n",
       "1     0       1       1  \n",
       "2     0       0       1  \n",
       "3     0       1       1  \n",
       "4     0       0       0  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# drop id column as it is of no use for further analysis\n",
    "df.drop(['id'], axis=1, inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the descriptive statistics table it can be seen that some features have ouliers e.g. the blood pressure values with negative values. Check for the number of outliers in blood pressure ranges."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1876</th>\n",
       "      <td>15116</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>60.0</td>\n",
       "      <td>902</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014</th>\n",
       "      <td>22712</td>\n",
       "      <td>2</td>\n",
       "      <td>167</td>\n",
       "      <td>59.0</td>\n",
       "      <td>906</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4817</th>\n",
       "      <td>14425</td>\n",
       "      <td>1</td>\n",
       "      <td>168</td>\n",
       "      <td>63.0</td>\n",
       "      <td>909</td>\n",
       "      <td>60</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7763</th>\n",
       "      <td>21032</td>\n",
       "      <td>1</td>\n",
       "      <td>175</td>\n",
       "      <td>80.0</td>\n",
       "      <td>11500</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8915</th>\n",
       "      <td>18870</td>\n",
       "      <td>1</td>\n",
       "      <td>164</td>\n",
       "      <td>75.0</td>\n",
       "      <td>1420</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9557</th>\n",
       "      <td>22659</td>\n",
       "      <td>1</td>\n",
       "      <td>155</td>\n",
       "      <td>87.0</td>\n",
       "      <td>701</td>\n",
       "      <td>110</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13895</th>\n",
       "      <td>15996</td>\n",
       "      <td>1</td>\n",
       "      <td>168</td>\n",
       "      <td>72.0</td>\n",
       "      <td>1500</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17713</th>\n",
       "      <td>22398</td>\n",
       "      <td>2</td>\n",
       "      <td>163</td>\n",
       "      <td>50.0</td>\n",
       "      <td>907</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23867</th>\n",
       "      <td>16131</td>\n",
       "      <td>1</td>\n",
       "      <td>161</td>\n",
       "      <td>92.0</td>\n",
       "      <td>906</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25464</th>\n",
       "      <td>15835</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>75.0</td>\n",
       "      <td>14020</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25519</th>\n",
       "      <td>21361</td>\n",
       "      <td>1</td>\n",
       "      <td>169</td>\n",
       "      <td>71.0</td>\n",
       "      <td>14020</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25780</th>\n",
       "      <td>18304</td>\n",
       "      <td>1</td>\n",
       "      <td>157</td>\n",
       "      <td>83.0</td>\n",
       "      <td>1400</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28147</th>\n",
       "      <td>19700</td>\n",
       "      <td>2</td>\n",
       "      <td>175</td>\n",
       "      <td>87.0</td>\n",
       "      <td>1620</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29665</th>\n",
       "      <td>17548</td>\n",
       "      <td>1</td>\n",
       "      <td>154</td>\n",
       "      <td>65.0</td>\n",
       "      <td>907</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31783</th>\n",
       "      <td>16070</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>64.0</td>\n",
       "      <td>907</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36894</th>\n",
       "      <td>20612</td>\n",
       "      <td>2</td>\n",
       "      <td>175</td>\n",
       "      <td>78.0</td>\n",
       "      <td>1130</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40330</th>\n",
       "      <td>20322</td>\n",
       "      <td>1</td>\n",
       "      <td>162</td>\n",
       "      <td>50.0</td>\n",
       "      <td>309</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40831</th>\n",
       "      <td>19806</td>\n",
       "      <td>1</td>\n",
       "      <td>162</td>\n",
       "      <td>67.0</td>\n",
       "      <td>401</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40852</th>\n",
       "      <td>17438</td>\n",
       "      <td>1</td>\n",
       "      <td>169</td>\n",
       "      <td>70.0</td>\n",
       "      <td>16020</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41095</th>\n",
       "      <td>21117</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>60.0</td>\n",
       "      <td>1202</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41505</th>\n",
       "      <td>20970</td>\n",
       "      <td>1</td>\n",
       "      <td>154</td>\n",
       "      <td>41.0</td>\n",
       "      <td>806</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42397</th>\n",
       "      <td>17988</td>\n",
       "      <td>2</td>\n",
       "      <td>176</td>\n",
       "      <td>69.0</td>\n",
       "      <td>906</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42658</th>\n",
       "      <td>20456</td>\n",
       "      <td>2</td>\n",
       "      <td>182</td>\n",
       "      <td>80.0</td>\n",
       "      <td>906</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43133</th>\n",
       "      <td>20961</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>78.0</td>\n",
       "      <td>1400</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43208</th>\n",
       "      <td>23418</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>67.0</td>\n",
       "      <td>1420</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43504</th>\n",
       "      <td>19534</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>62.0</td>\n",
       "      <td>1300</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46912</th>\n",
       "      <td>16910</td>\n",
       "      <td>2</td>\n",
       "      <td>180</td>\n",
       "      <td>78.0</td>\n",
       "      <td>14020</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47253</th>\n",
       "      <td>19731</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>65.0</td>\n",
       "      <td>14020</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48795</th>\n",
       "      <td>21867</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>76.0</td>\n",
       "      <td>1400</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50836</th>\n",
       "      <td>16918</td>\n",
       "      <td>2</td>\n",
       "      <td>164</td>\n",
       "      <td>66.0</td>\n",
       "      <td>1409</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51438</th>\n",
       "      <td>18784</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>65.0</td>\n",
       "      <td>11020</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53982</th>\n",
       "      <td>18511</td>\n",
       "      <td>1</td>\n",
       "      <td>164</td>\n",
       "      <td>54.0</td>\n",
       "      <td>960</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55459</th>\n",
       "      <td>18307</td>\n",
       "      <td>1</td>\n",
       "      <td>152</td>\n",
       "      <td>76.0</td>\n",
       "      <td>13010</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55847</th>\n",
       "      <td>23182</td>\n",
       "      <td>1</td>\n",
       "      <td>161</td>\n",
       "      <td>105.0</td>\n",
       "      <td>13010</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57291</th>\n",
       "      <td>21948</td>\n",
       "      <td>2</td>\n",
       "      <td>166</td>\n",
       "      <td>73.0</td>\n",
       "      <td>1300</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57918</th>\n",
       "      <td>23264</td>\n",
       "      <td>1</td>\n",
       "      <td>153</td>\n",
       "      <td>63.0</td>\n",
       "      <td>1110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63996</th>\n",
       "      <td>16929</td>\n",
       "      <td>1</td>\n",
       "      <td>168</td>\n",
       "      <td>69.0</td>\n",
       "      <td>1205</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64911</th>\n",
       "      <td>16674</td>\n",
       "      <td>1</td>\n",
       "      <td>157</td>\n",
       "      <td>78.0</td>\n",
       "      <td>906</td>\n",
       "      <td>60</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68663</th>\n",
       "      <td>18190</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>41.0</td>\n",
       "      <td>906</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69370</th>\n",
       "      <td>14696</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>74.0</td>\n",
       "      <td>2000</td>\n",
       "      <td>100</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "1876   15116       1     160    60.0    902     60            1     1      0   \n",
       "2014   22712       2     167    59.0    906      0            1     1      0   \n",
       "4817   14425       1     168    63.0    909     60            2     1      0   \n",
       "7763   21032       1     175    80.0  11500     90            1     1      0   \n",
       "8915   18870       1     164    75.0   1420     80            2     1      0   \n",
       "9557   22659       1     155    87.0    701    110            1     1      0   \n",
       "13895  15996       1     168    72.0   1500     80            1     1      0   \n",
       "17713  22398       2     163    50.0    907     70            3     3      0   \n",
       "23867  16131       1     161    92.0    906      0            2     1      0   \n",
       "25464  15835       2     169    75.0  14020     80            2     1      0   \n",
       "25519  21361       1     169    71.0  14020     80            3     3      0   \n",
       "25780  18304       1     157    83.0   1400     80            1     1      0   \n",
       "28147  19700       2     175    87.0   1620     80            2     1      0   \n",
       "29665  17548       1     154    65.0    907     70            1     1      0   \n",
       "31783  16070       1     170    64.0    907      0            1     1      0   \n",
       "36894  20612       2     175    78.0   1130     90            1     1      0   \n",
       "40330  20322       1     162    50.0    309      0            1     1      0   \n",
       "40831  19806       1     162    67.0    401     80            1     3      0   \n",
       "40852  17438       1     169    70.0  16020     80            1     1      0   \n",
       "41095  21117       1     160    60.0   1202     80            1     1      0   \n",
       "41505  20970       1     154    41.0    806      0            1     1      0   \n",
       "42397  17988       2     176    69.0    906      0            1     1      0   \n",
       "42658  20456       2     182    80.0    906     60            1     1      0   \n",
       "43133  20961       2     170    78.0   1400     90            2     1      0   \n",
       "43208  23418       1     165    67.0   1420     80            2     1      0   \n",
       "43504  19534       1     158    62.0   1300     80            3     1      0   \n",
       "46912  16910       2     180    78.0  14020     90            1     1      0   \n",
       "47253  19731       1     160    65.0  14020     90            1     1      0   \n",
       "48795  21867       1     156    76.0   1400     90            1     1      0   \n",
       "50836  16918       2     164    66.0   1409     90            1     1      0   \n",
       "51438  18784       2     168    65.0  11020     80            1     1      0   \n",
       "53982  18511       1     164    54.0    960     60            1     1      0   \n",
       "55459  18307       1     152    76.0  13010     80            2     2      0   \n",
       "55847  23182       1     161   105.0  13010     80            1     1      0   \n",
       "57291  21948       2     166    73.0   1300     90            1     1      0   \n",
       "57918  23264       1     153    63.0   1110     80            1     1      0   \n",
       "63996  16929       1     168    69.0   1205     90            1     1      0   \n",
       "64911  16674       1     157    78.0    906     60            2     1      0   \n",
       "68663  18190       1     156    41.0    906      0            1     1      0   \n",
       "69370  14696       1     170    74.0   2000    100            2     1      0   \n",
       "\n",
       "       alco  active  cardio  \n",
       "1876      0       1       0  \n",
       "2014      0       1       0  \n",
       "4817      0       1       0  \n",
       "7763      0       1       1  \n",
       "8915      0       1       1  \n",
       "9557      0       1       1  \n",
       "13895     0       1       1  \n",
       "17713     0       1       1  \n",
       "23867     0       1       1  \n",
       "25464     0       1       1  \n",
       "25519     0       1       1  \n",
       "25780     0       1       1  \n",
       "28147     0       1       1  \n",
       "29665     0       1       0  \n",
       "31783     0       1       0  \n",
       "36894     0       1       1  \n",
       "40330     0       1       0  \n",
       "40831     0       1       1  \n",
       "40852     0       0       1  \n",
       "41095     0       1       1  \n",
       "41505     0       1       0  \n",
       "42397     0       1       0  \n",
       "42658     0       1       1  \n",
       "43133     0       1       0  \n",
       "43208     0       1       1  \n",
       "43504     1       1       1  \n",
       "46912     0       1       1  \n",
       "47253     0       1       0  \n",
       "48795     0       1       1  \n",
       "50836     0       1       1  \n",
       "51438     0       1       1  \n",
       "53982     0       1       0  \n",
       "55459     0       1       1  \n",
       "55847     0       0       0  \n",
       "57291     1       1       0  \n",
       "57918     0       0       1  \n",
       "63996     0       0       1  \n",
       "64911     0       1       0  \n",
       "68663     0       1       0  \n",
       "69370     0       1       1  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "high=df[(df['ap_hi']>300)]\n",
    "high"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "40"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(high)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>567</th>\n",
       "      <td>21281</td>\n",
       "      <td>1</td>\n",
       "      <td>168</td>\n",
       "      <td>78.0</td>\n",
       "      <td>14</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>927</th>\n",
       "      <td>21867</td>\n",
       "      <td>2</td>\n",
       "      <td>175</td>\n",
       "      <td>70.0</td>\n",
       "      <td>14</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>979</th>\n",
       "      <td>18225</td>\n",
       "      <td>1</td>\n",
       "      <td>172</td>\n",
       "      <td>65.0</td>\n",
       "      <td>11</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1600</th>\n",
       "      <td>19201</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>66.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1627</th>\n",
       "      <td>22591</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>71.0</td>\n",
       "      <td>14</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1772</th>\n",
       "      <td>14365</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>64.0</td>\n",
       "      <td>11</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2167</th>\n",
       "      <td>21945</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>75.0</td>\n",
       "      <td>14</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2203</th>\n",
       "      <td>21776</td>\n",
       "      <td>2</td>\n",
       "      <td>187</td>\n",
       "      <td>80.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2431</th>\n",
       "      <td>18472</td>\n",
       "      <td>2</td>\n",
       "      <td>165</td>\n",
       "      <td>84.0</td>\n",
       "      <td>14</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2528</th>\n",
       "      <td>15267</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>86.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2612</th>\n",
       "      <td>23445</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>64.0</td>\n",
       "      <td>10</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2853</th>\n",
       "      <td>22824</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>87.0</td>\n",
       "      <td>16</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3449</th>\n",
       "      <td>17619</td>\n",
       "      <td>1</td>\n",
       "      <td>159</td>\n",
       "      <td>57.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3683</th>\n",
       "      <td>19079</td>\n",
       "      <td>1</td>\n",
       "      <td>154</td>\n",
       "      <td>52.0</td>\n",
       "      <td>14</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3846</th>\n",
       "      <td>21206</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>76.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3905</th>\n",
       "      <td>20991</td>\n",
       "      <td>1</td>\n",
       "      <td>162</td>\n",
       "      <td>72.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3949</th>\n",
       "      <td>16697</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>62.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4280</th>\n",
       "      <td>23417</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>89.0</td>\n",
       "      <td>11</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4382</th>\n",
       "      <td>22126</td>\n",
       "      <td>2</td>\n",
       "      <td>165</td>\n",
       "      <td>70.0</td>\n",
       "      <td>12</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4465</th>\n",
       "      <td>14606</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>66.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4582</th>\n",
       "      <td>23289</td>\n",
       "      <td>2</td>\n",
       "      <td>174</td>\n",
       "      <td>83.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4595</th>\n",
       "      <td>20387</td>\n",
       "      <td>2</td>\n",
       "      <td>158</td>\n",
       "      <td>58.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4607</th>\n",
       "      <td>15281</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>78.0</td>\n",
       "      <td>-100</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4685</th>\n",
       "      <td>20367</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>65.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5225</th>\n",
       "      <td>15289</td>\n",
       "      <td>1</td>\n",
       "      <td>161</td>\n",
       "      <td>67.0</td>\n",
       "      <td>11</td>\n",
       "      <td>70</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5382</th>\n",
       "      <td>21240</td>\n",
       "      <td>1</td>\n",
       "      <td>162</td>\n",
       "      <td>69.0</td>\n",
       "      <td>7</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6569</th>\n",
       "      <td>20243</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>66.0</td>\n",
       "      <td>11</td>\n",
       "      <td>70</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7506</th>\n",
       "      <td>21768</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>90.0</td>\n",
       "      <td>15</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7949</th>\n",
       "      <td>17471</td>\n",
       "      <td>1</td>\n",
       "      <td>172</td>\n",
       "      <td>77.0</td>\n",
       "      <td>12</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8280</th>\n",
       "      <td>23302</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>81.0</td>\n",
       "      <td>17</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57935</th>\n",
       "      <td>19939</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>66.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59973</th>\n",
       "      <td>21240</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>85.0</td>\n",
       "      <td>14</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60106</th>\n",
       "      <td>22571</td>\n",
       "      <td>1</td>\n",
       "      <td>167</td>\n",
       "      <td>74.0</td>\n",
       "      <td>15</td>\n",
       "      <td>-70</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60275</th>\n",
       "      <td>19660</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>70.0</td>\n",
       "      <td>15</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60578</th>\n",
       "      <td>20529</td>\n",
       "      <td>1</td>\n",
       "      <td>152</td>\n",
       "      <td>115.0</td>\n",
       "      <td>15</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60922</th>\n",
       "      <td>20522</td>\n",
       "      <td>2</td>\n",
       "      <td>176</td>\n",
       "      <td>76.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62188</th>\n",
       "      <td>18874</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>89.0</td>\n",
       "      <td>15</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62458</th>\n",
       "      <td>21297</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>65.0</td>\n",
       "      <td>13</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62719</th>\n",
       "      <td>22023</td>\n",
       "      <td>1</td>\n",
       "      <td>168</td>\n",
       "      <td>83.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62817</th>\n",
       "      <td>18354</td>\n",
       "      <td>1</td>\n",
       "      <td>155</td>\n",
       "      <td>79.0</td>\n",
       "      <td>10</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63077</th>\n",
       "      <td>20486</td>\n",
       "      <td>1</td>\n",
       "      <td>157</td>\n",
       "      <td>68.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63268</th>\n",
       "      <td>15954</td>\n",
       "      <td>2</td>\n",
       "      <td>173</td>\n",
       "      <td>83.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63913</th>\n",
       "      <td>21192</td>\n",
       "      <td>2</td>\n",
       "      <td>171</td>\n",
       "      <td>80.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64409</th>\n",
       "      <td>21157</td>\n",
       "      <td>2</td>\n",
       "      <td>173</td>\n",
       "      <td>94.0</td>\n",
       "      <td>13</td>\n",
       "      <td>585</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64454</th>\n",
       "      <td>21348</td>\n",
       "      <td>1</td>\n",
       "      <td>66</td>\n",
       "      <td>63.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64556</th>\n",
       "      <td>15308</td>\n",
       "      <td>1</td>\n",
       "      <td>180</td>\n",
       "      <td>89.0</td>\n",
       "      <td>11</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64626</th>\n",
       "      <td>16179</td>\n",
       "      <td>2</td>\n",
       "      <td>175</td>\n",
       "      <td>75.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65344</th>\n",
       "      <td>22729</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>78.0</td>\n",
       "      <td>13</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66315</th>\n",
       "      <td>22551</td>\n",
       "      <td>1</td>\n",
       "      <td>169</td>\n",
       "      <td>88.0</td>\n",
       "      <td>10</td>\n",
       "      <td>160</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66740</th>\n",
       "      <td>20512</td>\n",
       "      <td>1</td>\n",
       "      <td>162</td>\n",
       "      <td>74.0</td>\n",
       "      <td>14</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67137</th>\n",
       "      <td>15975</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>58.0</td>\n",
       "      <td>11</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67368</th>\n",
       "      <td>19681</td>\n",
       "      <td>2</td>\n",
       "      <td>158</td>\n",
       "      <td>61.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67658</th>\n",
       "      <td>22660</td>\n",
       "      <td>1</td>\n",
       "      <td>154</td>\n",
       "      <td>52.0</td>\n",
       "      <td>15</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67947</th>\n",
       "      <td>16613</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>81.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68455</th>\n",
       "      <td>21973</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>63.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68630</th>\n",
       "      <td>21217</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>59.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68742</th>\n",
       "      <td>18755</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>74.0</td>\n",
       "      <td>14</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68998</th>\n",
       "      <td>19107</td>\n",
       "      <td>1</td>\n",
       "      <td>154</td>\n",
       "      <td>77.0</td>\n",
       "      <td>14</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69137</th>\n",
       "      <td>15442</td>\n",
       "      <td>2</td>\n",
       "      <td>176</td>\n",
       "      <td>65.0</td>\n",
       "      <td>12</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69549</th>\n",
       "      <td>21243</td>\n",
       "      <td>1</td>\n",
       "      <td>155</td>\n",
       "      <td>69.0</td>\n",
       "      <td>13</td>\n",
       "      <td>90</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>189 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "567    21281       1     168    78.0     14     90            2     1      0   \n",
       "927    21867       2     175    70.0     14     90            3     1      0   \n",
       "979    18225       1     172    65.0     11     80            1     3      0   \n",
       "1600   19201       1     165    66.0     12     80            1     1      0   \n",
       "1627   22591       1     165    71.0     14     80            1     1      0   \n",
       "1772   14365       2     168    64.0     11     60            1     1      1   \n",
       "2167   21945       2     169    75.0     14     80            2     1      0   \n",
       "2203   21776       2     187    80.0     12     80            1     1      1   \n",
       "2431   18472       2     165    84.0     14     80            1     1      0   \n",
       "2528   15267       1     163    86.0     12     80            1     1      0   \n",
       "2612   23445       1     170    64.0     10     70            1     1      0   \n",
       "2853   22824       1     156    87.0     16     90            1     1      0   \n",
       "3449   17619       1     159    57.0     12     80            1     1      0   \n",
       "3683   19079       1     154    52.0     14     90            1     1      0   \n",
       "3846   21206       2     170    76.0     12     80            1     3      0   \n",
       "3905   20991       1     162    72.0     12     80            1     3      0   \n",
       "3949   16697       1     160    62.0     12     80            1     1      0   \n",
       "4280   23417       1     163    89.0     11     70            1     1      0   \n",
       "4382   22126       2     165    70.0     12     70            1     1      0   \n",
       "4465   14606       1     165    66.0     12     80            1     1      0   \n",
       "4582   23289       2     174    83.0     12     80            1     1      0   \n",
       "4595   20387       2     158    58.0     12     80            1     1      1   \n",
       "4607   15281       1     165    78.0   -100     80            2     1      0   \n",
       "4685   20367       1     165    65.0     12     80            1     1      0   \n",
       "5225   15289       1     161    67.0     11     70            2     1      0   \n",
       "5382   21240       1     162    69.0      7     80            1     1      0   \n",
       "6569   20243       1     160    66.0     11     70            2     2      0   \n",
       "7506   21768       1     165    90.0     15     90            1     1      0   \n",
       "7949   17471       1     172    77.0     12     70            1     1      0   \n",
       "8280   23302       1     160    81.0     17     80            1     1      0   \n",
       "...      ...     ...     ...     ...    ...    ...          ...   ...    ...   \n",
       "57935  19939       1     165    66.0     12     80            1     1      0   \n",
       "59973  21240       1     165    85.0     14     90            2     1      0   \n",
       "60106  22571       1     167    74.0     15    -70            1     1      0   \n",
       "60275  19660       2     168    70.0     15     80            1     1      0   \n",
       "60578  20529       1     152   115.0     15     90            1     2      0   \n",
       "60922  20522       2     176    76.0     12     80            1     3      1   \n",
       "62188  18874       2     169    89.0     15     90            1     1      0   \n",
       "62458  21297       2     170    65.0     13     80            1     1      0   \n",
       "62719  22023       1     168    83.0     12     80            2     1      0   \n",
       "62817  18354       1     155    79.0     10     70            1     1      0   \n",
       "63077  20486       1     157    68.0     12     80            1     1      0   \n",
       "63268  15954       2     173    83.0     12     80            1     1      0   \n",
       "63913  21192       2     171    80.0     12     80            1     3      0   \n",
       "64409  21157       2     173    94.0     13    585            2     1      0   \n",
       "64454  21348       1      66    63.0     12     80            1     1      0   \n",
       "64556  15308       1     180    89.0     11     80            1     1      0   \n",
       "64626  16179       2     175    75.0     12     80            1     1      0   \n",
       "65344  22729       1     156    78.0     13     80            1     1      0   \n",
       "66315  22551       1     169    88.0     10    160            3     3      0   \n",
       "66740  20512       1     162    74.0     14     70            1     1      0   \n",
       "67137  15975       1     158    58.0     11     70            1     1      0   \n",
       "67368  19681       2     158    61.0     12     80            3     3      0   \n",
       "67658  22660       1     154    52.0     15     80            1     1      0   \n",
       "67947  16613       2     170    81.0     12     80            1     1      0   \n",
       "68455  21973       1     165    63.0     12     80            1     1      0   \n",
       "68630  21217       1     160    59.0     12     80            1     1      0   \n",
       "68742  18755       1     158    74.0     14     90            1     1      0   \n",
       "68998  19107       1     154    77.0     14     90            1     1      0   \n",
       "69137  15442       2     176    65.0     12     80            1     1      0   \n",
       "69549  21243       1     155    69.0     13     90            1     3      0   \n",
       "\n",
       "       alco  active  cardio  \n",
       "567       0       1       1  \n",
       "927       0       1       1  \n",
       "979       0       1       0  \n",
       "1600      0       1       0  \n",
       "1627      0       1       1  \n",
       "1772      1       1       0  \n",
       "2167      0       1       1  \n",
       "2203      0       1       0  \n",
       "2431      0       1       1  \n",
       "2528      0       0       0  \n",
       "2612      0       1       1  \n",
       "2853      0       0       1  \n",
       "3449      0       1       0  \n",
       "3683      0       1       1  \n",
       "3846      0       0       0  \n",
       "3905      0       1       0  \n",
       "3949      0       1       0  \n",
       "4280      0       1       0  \n",
       "4382      0       0       1  \n",
       "4465      0       1       0  \n",
       "4582      0       0       1  \n",
       "4595      1       1       0  \n",
       "4607      0       1       0  \n",
       "4685      0       1       0  \n",
       "5225      0       1       0  \n",
       "5382      0       1       0  \n",
       "6569      0       1       0  \n",
       "7506      0       1       1  \n",
       "7949      0       1       1  \n",
       "8280      0       1       1  \n",
       "...     ...     ...     ...  \n",
       "57935     0       1       0  \n",
       "59973     0       1       1  \n",
       "60106     0       1       1  \n",
       "60275     0       1       1  \n",
       "60578     0       1       1  \n",
       "60922     1       1       0  \n",
       "62188     0       0       1  \n",
       "62458     0       1       0  \n",
       "62719     0       0       0  \n",
       "62817     0       1       0  \n",
       "63077     0       1       1  \n",
       "63268     0       1       0  \n",
       "63913     0       1       1  \n",
       "64409     0       1       1  \n",
       "64454     0       0       1  \n",
       "64556     0       0       0  \n",
       "64626     0       1       1  \n",
       "65344     0       1       1  \n",
       "66315     0       0       1  \n",
       "66740     0       1       0  \n",
       "67137     0       1       0  \n",
       "67368     0       1       0  \n",
       "67658     0       0       1  \n",
       "67947     0       0       0  \n",
       "68455     0       1       0  \n",
       "68630     0       1       0  \n",
       "68742     0       1       1  \n",
       "68998     0       1       0  \n",
       "69137     0       1       0  \n",
       "69549     0       1       1  \n",
       "\n",
       "[189 rows x 12 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "low=df[(df['ap_hi']<70)]\n",
    "low"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "189"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(low)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# drop rows with systolic blood pressure below 70 and higher than 300\n",
    "indexNames=df[(df['ap_hi']<70) | (df['ap_hi']>300)].index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(indexNames, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>17489</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>98.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1100</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>241</th>\n",
       "      <td>21932</td>\n",
       "      <td>2</td>\n",
       "      <td>157</td>\n",
       "      <td>60.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>260</th>\n",
       "      <td>18217</td>\n",
       "      <td>1</td>\n",
       "      <td>150</td>\n",
       "      <td>83.0</td>\n",
       "      <td>140</td>\n",
       "      <td>800</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>329</th>\n",
       "      <td>23407</td>\n",
       "      <td>1</td>\n",
       "      <td>176</td>\n",
       "      <td>63.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345</th>\n",
       "      <td>18704</td>\n",
       "      <td>1</td>\n",
       "      <td>154</td>\n",
       "      <td>81.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>15226</td>\n",
       "      <td>1</td>\n",
       "      <td>150</td>\n",
       "      <td>95.0</td>\n",
       "      <td>150</td>\n",
       "      <td>1033</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>559</th>\n",
       "      <td>20430</td>\n",
       "      <td>2</td>\n",
       "      <td>173</td>\n",
       "      <td>101.0</td>\n",
       "      <td>200</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>613</th>\n",
       "      <td>18963</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>92.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>649</th>\n",
       "      <td>18190</td>\n",
       "      <td>1</td>\n",
       "      <td>166</td>\n",
       "      <td>57.0</td>\n",
       "      <td>190</td>\n",
       "      <td>1100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>653</th>\n",
       "      <td>21842</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>72.0</td>\n",
       "      <td>180</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>719</th>\n",
       "      <td>23407</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>74.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>881</th>\n",
       "      <td>17405</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>84.0</td>\n",
       "      <td>150</td>\n",
       "      <td>1100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1000</th>\n",
       "      <td>21043</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>82.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1033</th>\n",
       "      <td>15906</td>\n",
       "      <td>1</td>\n",
       "      <td>167</td>\n",
       "      <td>71.0</td>\n",
       "      <td>150</td>\n",
       "      <td>1001</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1074</th>\n",
       "      <td>21107</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>76.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1092</th>\n",
       "      <td>20344</td>\n",
       "      <td>1</td>\n",
       "      <td>152</td>\n",
       "      <td>55.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1281</th>\n",
       "      <td>23578</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>86.0</td>\n",
       "      <td>130</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1493</th>\n",
       "      <td>15283</td>\n",
       "      <td>1</td>\n",
       "      <td>153</td>\n",
       "      <td>49.0</td>\n",
       "      <td>170</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1522</th>\n",
       "      <td>21179</td>\n",
       "      <td>2</td>\n",
       "      <td>171</td>\n",
       "      <td>68.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1575</th>\n",
       "      <td>18958</td>\n",
       "      <td>1</td>\n",
       "      <td>172</td>\n",
       "      <td>68.0</td>\n",
       "      <td>170</td>\n",
       "      <td>1200</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1579</th>\n",
       "      <td>17289</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>63.0</td>\n",
       "      <td>150</td>\n",
       "      <td>1100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1614</th>\n",
       "      <td>14369</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>79.0</td>\n",
       "      <td>150</td>\n",
       "      <td>1100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1632</th>\n",
       "      <td>20588</td>\n",
       "      <td>2</td>\n",
       "      <td>160</td>\n",
       "      <td>55.0</td>\n",
       "      <td>180</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1702</th>\n",
       "      <td>17403</td>\n",
       "      <td>1</td>\n",
       "      <td>161</td>\n",
       "      <td>109.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1798</th>\n",
       "      <td>22477</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>93.0</td>\n",
       "      <td>180</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1906</th>\n",
       "      <td>15109</td>\n",
       "      <td>1</td>\n",
       "      <td>166</td>\n",
       "      <td>77.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2069</th>\n",
       "      <td>21831</td>\n",
       "      <td>1</td>\n",
       "      <td>162</td>\n",
       "      <td>68.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2142</th>\n",
       "      <td>15384</td>\n",
       "      <td>2</td>\n",
       "      <td>174</td>\n",
       "      <td>113.0</td>\n",
       "      <td>210</td>\n",
       "      <td>1100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2243</th>\n",
       "      <td>23356</td>\n",
       "      <td>2</td>\n",
       "      <td>165</td>\n",
       "      <td>85.0</td>\n",
       "      <td>180</td>\n",
       "      <td>1100</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2251</th>\n",
       "      <td>23253</td>\n",
       "      <td>2</td>\n",
       "      <td>172</td>\n",
       "      <td>120.0</td>\n",
       "      <td>170</td>\n",
       "      <td>1100</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68050</th>\n",
       "      <td>18005</td>\n",
       "      <td>1</td>\n",
       "      <td>167</td>\n",
       "      <td>69.0</td>\n",
       "      <td>150</td>\n",
       "      <td>709</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68054</th>\n",
       "      <td>23513</td>\n",
       "      <td>1</td>\n",
       "      <td>154</td>\n",
       "      <td>100.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68216</th>\n",
       "      <td>19840</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>82.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68220</th>\n",
       "      <td>21774</td>\n",
       "      <td>1</td>\n",
       "      <td>166</td>\n",
       "      <td>89.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68288</th>\n",
       "      <td>23486</td>\n",
       "      <td>2</td>\n",
       "      <td>161</td>\n",
       "      <td>84.0</td>\n",
       "      <td>180</td>\n",
       "      <td>1100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68453</th>\n",
       "      <td>14324</td>\n",
       "      <td>1</td>\n",
       "      <td>152</td>\n",
       "      <td>75.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68469</th>\n",
       "      <td>22445</td>\n",
       "      <td>2</td>\n",
       "      <td>178</td>\n",
       "      <td>84.0</td>\n",
       "      <td>190</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68538</th>\n",
       "      <td>19062</td>\n",
       "      <td>1</td>\n",
       "      <td>166</td>\n",
       "      <td>70.0</td>\n",
       "      <td>160</td>\n",
       "      <td>10000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68669</th>\n",
       "      <td>23290</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>68.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68694</th>\n",
       "      <td>15259</td>\n",
       "      <td>1</td>\n",
       "      <td>161</td>\n",
       "      <td>74.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68780</th>\n",
       "      <td>20271</td>\n",
       "      <td>2</td>\n",
       "      <td>165</td>\n",
       "      <td>76.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68821</th>\n",
       "      <td>16748</td>\n",
       "      <td>1</td>\n",
       "      <td>161</td>\n",
       "      <td>65.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68842</th>\n",
       "      <td>19102</td>\n",
       "      <td>2</td>\n",
       "      <td>172</td>\n",
       "      <td>92.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68872</th>\n",
       "      <td>19467</td>\n",
       "      <td>2</td>\n",
       "      <td>163</td>\n",
       "      <td>71.0</td>\n",
       "      <td>150</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68917</th>\n",
       "      <td>19783</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>82.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69053</th>\n",
       "      <td>19065</td>\n",
       "      <td>2</td>\n",
       "      <td>186</td>\n",
       "      <td>66.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69063</th>\n",
       "      <td>18929</td>\n",
       "      <td>2</td>\n",
       "      <td>175</td>\n",
       "      <td>84.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69162</th>\n",
       "      <td>22656</td>\n",
       "      <td>2</td>\n",
       "      <td>160</td>\n",
       "      <td>98.0</td>\n",
       "      <td>180</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69205</th>\n",
       "      <td>19624</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>77.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69302</th>\n",
       "      <td>21695</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>63.0</td>\n",
       "      <td>150</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69320</th>\n",
       "      <td>21059</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>63.0</td>\n",
       "      <td>120</td>\n",
       "      <td>602</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69480</th>\n",
       "      <td>17314</td>\n",
       "      <td>2</td>\n",
       "      <td>171</td>\n",
       "      <td>93.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69532</th>\n",
       "      <td>14446</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>63.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69552</th>\n",
       "      <td>22488</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>68.0</td>\n",
       "      <td>130</td>\n",
       "      <td>1100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69631</th>\n",
       "      <td>14674</td>\n",
       "      <td>1</td>\n",
       "      <td>154</td>\n",
       "      <td>90.0</td>\n",
       "      <td>130</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69771</th>\n",
       "      <td>23330</td>\n",
       "      <td>1</td>\n",
       "      <td>167</td>\n",
       "      <td>81.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69872</th>\n",
       "      <td>21808</td>\n",
       "      <td>1</td>\n",
       "      <td>152</td>\n",
       "      <td>56.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69878</th>\n",
       "      <td>21239</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>95.0</td>\n",
       "      <td>160</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69885</th>\n",
       "      <td>22417</td>\n",
       "      <td>2</td>\n",
       "      <td>166</td>\n",
       "      <td>78.0</td>\n",
       "      <td>170</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69967</th>\n",
       "      <td>21416</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>63.0</td>\n",
       "      <td>140</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>950 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "228    17489       2     183    98.0    160   1100            1     2      1   \n",
       "241    21932       2     157    60.0    160   1000            2     1      0   \n",
       "260    18217       1     150    83.0    140    800            1     1      0   \n",
       "329    23407       1     176    63.0    160   1000            2     2      0   \n",
       "345    18704       1     154    81.0    140   1000            2     1      0   \n",
       "473    15226       1     150    95.0    150   1033            1     1      0   \n",
       "559    20430       2     173   101.0    200   1000            1     1      0   \n",
       "613    18963       1     165    92.0    140   1000            1     1      1   \n",
       "649    18190       1     166    57.0    190   1100            1     1      0   \n",
       "653    21842       1     156    72.0    180   1000            2     1      0   \n",
       "719    23407       2     170    74.0    140   1000            1     1      0   \n",
       "881    17405       2     170    84.0    150   1100            1     1      1   \n",
       "1000   21043       2     168    82.0    160   1000            2     1      0   \n",
       "1033   15906       1     167    71.0    150   1001            2     1      0   \n",
       "1074   21107       2     169    76.0    140   1000            3     3      1   \n",
       "1092   20344       1     152    55.0    140   1000            3     3      0   \n",
       "1281   23578       2     169    86.0    130   1000            1     1      0   \n",
       "1493   15283       1     153    49.0    170   1000            2     1      0   \n",
       "1522   21179       2     171    68.0    140   1000            2     1      0   \n",
       "1575   18958       1     172    68.0    170   1200            1     1      0   \n",
       "1579   17289       2     168    63.0    150   1100            1     1      1   \n",
       "1614   14369       2     170    79.0    150   1100            1     1      0   \n",
       "1632   20588       2     160    55.0    180   1000            1     1      0   \n",
       "1702   17403       1     161   109.0    160   1000            2     1      0   \n",
       "1798   22477       1     158    93.0    180   1000            1     1      0   \n",
       "1906   15109       1     166    77.0    160   1000            1     2      1   \n",
       "2069   21831       1     162    68.0    160   1100            1     1      0   \n",
       "2142   15384       2     174   113.0    210   1100            1     1      0   \n",
       "2243   23356       2     165    85.0    180   1100            3     1      0   \n",
       "2251   23253       2     172   120.0    170   1100            2     1      0   \n",
       "...      ...     ...     ...     ...    ...    ...          ...   ...    ...   \n",
       "68050  18005       1     167    69.0    150    709            2     1      0   \n",
       "68054  23513       1     154   100.0    140   1000            1     1      0   \n",
       "68216  19840       1     165    82.0    160   1000            1     1      0   \n",
       "68220  21774       1     166    89.0    140   1000            1     1      0   \n",
       "68288  23486       2     161    84.0    180   1100            1     1      0   \n",
       "68453  14324       1     152    75.0    140   1000            1     1      0   \n",
       "68469  22445       2     178    84.0    190   1000            1     1      1   \n",
       "68538  19062       1     166    70.0    160  10000            2     1      0   \n",
       "68669  23290       1     165    68.0    140   1000            1     1      0   \n",
       "68694  15259       1     161    74.0    160   1000            1     1      0   \n",
       "68780  20271       2     165    76.0    160   1000            1     1      0   \n",
       "68821  16748       1     161    65.0    140   1000            2     1      0   \n",
       "68842  19102       2     172    92.0    140   1000            1     1      0   \n",
       "68872  19467       2     163    71.0    150   1000            1     1      0   \n",
       "68917  19783       1     170    82.0    140   1000            1     1      0   \n",
       "69053  19065       2     186    66.0    140   1000            1     1      0   \n",
       "69063  18929       2     175    84.0    160   1000            1     1      0   \n",
       "69162  22656       2     160    98.0    180   1000            1     1      0   \n",
       "69205  19624       2     170    77.0    160   1000            3     2      0   \n",
       "69302  21695       1     158    63.0    150   1000            2     1      0   \n",
       "69320  21059       2     168    63.0    120    602            1     1      0   \n",
       "69480  17314       2     171    93.0    140   1000            3     1      1   \n",
       "69532  14446       1     160    63.0    160   1000            2     1      0   \n",
       "69552  22488       2     170    68.0    130   1100            1     1      0   \n",
       "69631  14674       1     154    90.0    130   1000            2     2      0   \n",
       "69771  23330       1     167    81.0    160   1000            1     1      0   \n",
       "69872  21808       1     152    56.0    160   1000            1     1      0   \n",
       "69878  21239       2     168    95.0    160   1000            1     1      0   \n",
       "69885  22417       2     166    78.0    170   1000            1     1      0   \n",
       "69967  21416       2     168    63.0    140   1000            1     1      0   \n",
       "\n",
       "       alco  active  cardio  \n",
       "228       0       1       1  \n",
       "241       0       0       1  \n",
       "260       0       1       1  \n",
       "329       0       0       1  \n",
       "345       0       1       1  \n",
       "473       0       1       1  \n",
       "559       0       1       1  \n",
       "613       0       1       1  \n",
       "649       0       1       1  \n",
       "653       0       0       1  \n",
       "719       0       1       1  \n",
       "881       0       0       1  \n",
       "1000      0       0       1  \n",
       "1033      0       1       1  \n",
       "1074      0       1       1  \n",
       "1092      0       1       1  \n",
       "1281      0       1       1  \n",
       "1493      0       1       1  \n",
       "1522      0       0       1  \n",
       "1575      0       1       1  \n",
       "1579      1       1       0  \n",
       "1614      0       0       1  \n",
       "1632      0       1       1  \n",
       "1702      0       1       1  \n",
       "1798      0       1       1  \n",
       "1906      0       1       0  \n",
       "2069      0       1       1  \n",
       "2142      0       1       1  \n",
       "2243      0       1       1  \n",
       "2251      0       1       1  \n",
       "...     ...     ...     ...  \n",
       "68050     0       0       0  \n",
       "68054     0       0       1  \n",
       "68216     0       0       1  \n",
       "68220     0       1       1  \n",
       "68288     0       1       1  \n",
       "68453     0       0       1  \n",
       "68469     0       1       1  \n",
       "68538     0       1       1  \n",
       "68669     0       0       1  \n",
       "68694     0       1       1  \n",
       "68780     0       1       1  \n",
       "68821     0       1       1  \n",
       "68842     0       1       1  \n",
       "68872     0       1       1  \n",
       "68917     0       1       1  \n",
       "69053     0       1       1  \n",
       "69063     0       0       1  \n",
       "69162     0       0       0  \n",
       "69205     0       1       1  \n",
       "69302     0       1       1  \n",
       "69320     0       0       0  \n",
       "69480     0       1       1  \n",
       "69532     1       0       1  \n",
       "69552     0       1       0  \n",
       "69631     0       1       1  \n",
       "69771     0       1       1  \n",
       "69872     0       1       1  \n",
       "69878     0       1       1  \n",
       "69885     0       0       0  \n",
       "69967     0       1       1  \n",
       "\n",
       "[950 rows x 12 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "high2=df[(df['ap_lo']>200)]\n",
    "high2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6737</th>\n",
       "      <td>16705</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>61.0</td>\n",
       "      <td>150</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7598</th>\n",
       "      <td>14661</td>\n",
       "      <td>2</td>\n",
       "      <td>70</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8797</th>\n",
       "      <td>21155</td>\n",
       "      <td>1</td>\n",
       "      <td>162</td>\n",
       "      <td>68.0</td>\n",
       "      <td>110</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9777</th>\n",
       "      <td>21802</td>\n",
       "      <td>1</td>\n",
       "      <td>166</td>\n",
       "      <td>125.0</td>\n",
       "      <td>120</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10106</th>\n",
       "      <td>18334</td>\n",
       "      <td>1</td>\n",
       "      <td>152</td>\n",
       "      <td>50.0</td>\n",
       "      <td>150</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11820</th>\n",
       "      <td>18171</td>\n",
       "      <td>1</td>\n",
       "      <td>169</td>\n",
       "      <td>69.0</td>\n",
       "      <td>128</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13489</th>\n",
       "      <td>14965</td>\n",
       "      <td>2</td>\n",
       "      <td>150</td>\n",
       "      <td>60.0</td>\n",
       "      <td>130</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13935</th>\n",
       "      <td>18007</td>\n",
       "      <td>1</td>\n",
       "      <td>164</td>\n",
       "      <td>74.0</td>\n",
       "      <td>110</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16459</th>\n",
       "      <td>20457</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>50.0</td>\n",
       "      <td>138</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17381</th>\n",
       "      <td>18226</td>\n",
       "      <td>1</td>\n",
       "      <td>164</td>\n",
       "      <td>78.0</td>\n",
       "      <td>138</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18898</th>\n",
       "      <td>17531</td>\n",
       "      <td>1</td>\n",
       "      <td>171</td>\n",
       "      <td>68.0</td>\n",
       "      <td>110</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18958</th>\n",
       "      <td>17452</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19075</th>\n",
       "      <td>19771</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>68.0</td>\n",
       "      <td>110</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20135</th>\n",
       "      <td>21436</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>72.0</td>\n",
       "      <td>110</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22380</th>\n",
       "      <td>16120</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>66.0</td>\n",
       "      <td>120</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22923</th>\n",
       "      <td>21182</td>\n",
       "      <td>2</td>\n",
       "      <td>166</td>\n",
       "      <td>68.0</td>\n",
       "      <td>149</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23305</th>\n",
       "      <td>16641</td>\n",
       "      <td>2</td>\n",
       "      <td>172</td>\n",
       "      <td>66.0</td>\n",
       "      <td>120</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24757</th>\n",
       "      <td>20432</td>\n",
       "      <td>1</td>\n",
       "      <td>168</td>\n",
       "      <td>68.0</td>\n",
       "      <td>120</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27686</th>\n",
       "      <td>23396</td>\n",
       "      <td>2</td>\n",
       "      <td>180</td>\n",
       "      <td>73.0</td>\n",
       "      <td>140</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28065</th>\n",
       "      <td>20376</td>\n",
       "      <td>1</td>\n",
       "      <td>161</td>\n",
       "      <td>52.0</td>\n",
       "      <td>90</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35140</th>\n",
       "      <td>20877</td>\n",
       "      <td>1</td>\n",
       "      <td>146</td>\n",
       "      <td>55.0</td>\n",
       "      <td>130</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37169</th>\n",
       "      <td>14454</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>60.0</td>\n",
       "      <td>170</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38370</th>\n",
       "      <td>23208</td>\n",
       "      <td>2</td>\n",
       "      <td>170</td>\n",
       "      <td>81.0</td>\n",
       "      <td>148</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38599</th>\n",
       "      <td>18091</td>\n",
       "      <td>2</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>120</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39896</th>\n",
       "      <td>18167</td>\n",
       "      <td>1</td>\n",
       "      <td>177</td>\n",
       "      <td>59.0</td>\n",
       "      <td>120</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40650</th>\n",
       "      <td>14671</td>\n",
       "      <td>1</td>\n",
       "      <td>162</td>\n",
       "      <td>58.0</td>\n",
       "      <td>120</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40961</th>\n",
       "      <td>19174</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>68.0</td>\n",
       "      <td>100</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43307</th>\n",
       "      <td>22718</td>\n",
       "      <td>1</td>\n",
       "      <td>151</td>\n",
       "      <td>58.0</td>\n",
       "      <td>170</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43922</th>\n",
       "      <td>18802</td>\n",
       "      <td>1</td>\n",
       "      <td>164</td>\n",
       "      <td>78.0</td>\n",
       "      <td>108</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44609</th>\n",
       "      <td>22433</td>\n",
       "      <td>2</td>\n",
       "      <td>165</td>\n",
       "      <td>65.0</td>\n",
       "      <td>130</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45835</th>\n",
       "      <td>19597</td>\n",
       "      <td>2</td>\n",
       "      <td>165</td>\n",
       "      <td>70.0</td>\n",
       "      <td>140</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47711</th>\n",
       "      <td>21742</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>100.0</td>\n",
       "      <td>140</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48049</th>\n",
       "      <td>19012</td>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>84.0</td>\n",
       "      <td>121</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56927</th>\n",
       "      <td>18336</td>\n",
       "      <td>1</td>\n",
       "      <td>155</td>\n",
       "      <td>76.0</td>\n",
       "      <td>70</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56950</th>\n",
       "      <td>15268</td>\n",
       "      <td>1</td>\n",
       "      <td>164</td>\n",
       "      <td>70.0</td>\n",
       "      <td>120</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57641</th>\n",
       "      <td>20627</td>\n",
       "      <td>1</td>\n",
       "      <td>157</td>\n",
       "      <td>76.0</td>\n",
       "      <td>180</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63787</th>\n",
       "      <td>14722</td>\n",
       "      <td>2</td>\n",
       "      <td>161</td>\n",
       "      <td>61.0</td>\n",
       "      <td>117</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63828</th>\n",
       "      <td>16842</td>\n",
       "      <td>1</td>\n",
       "      <td>178</td>\n",
       "      <td>69.0</td>\n",
       "      <td>110</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65303</th>\n",
       "      <td>23612</td>\n",
       "      <td>2</td>\n",
       "      <td>176</td>\n",
       "      <td>99.0</td>\n",
       "      <td>120</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68223</th>\n",
       "      <td>18809</td>\n",
       "      <td>2</td>\n",
       "      <td>173</td>\n",
       "      <td>100.0</td>\n",
       "      <td>130</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68568</th>\n",
       "      <td>15386</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>71.0</td>\n",
       "      <td>110</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "6737   16705       1     156    61.0    150     10            1     1      0   \n",
       "7598   14661       2      70    72.0    120      8            1     1      0   \n",
       "8797   21155       1     162    68.0    110     20            1     1      0   \n",
       "9777   21802       1     166   125.0    120      8            3     1      0   \n",
       "10106  18334       1     152    50.0    150     10            3     1      0   \n",
       "11820  18171       1     169    69.0    128     20            1     1      0   \n",
       "13489  14965       2     150    60.0    130      0            1     1      0   \n",
       "13935  18007       1     164    74.0    110     20            1     1      0   \n",
       "16459  20457       1     156    50.0    138      0            3     1      0   \n",
       "17381  18226       1     164    78.0    138      0            1     1      0   \n",
       "18898  17531       1     171    68.0    110      7            1     1      0   \n",
       "18958  17452       2     170    62.0    110     20            1     1      0   \n",
       "19075  19771       2     168    68.0    110      7            1     1      0   \n",
       "20135  21436       1     160    72.0    110     20            2     2      0   \n",
       "22380  16120       2     170    66.0    120     20            1     1      0   \n",
       "22923  21182       2     166    68.0    149      0            1     1      0   \n",
       "23305  16641       2     172    66.0    120     20            1     1      0   \n",
       "24757  20432       1     168    68.0    120     20            1     1      0   \n",
       "27686  23396       2     180    73.0    140      0            1     1      1   \n",
       "28065  20376       1     161    52.0     90      6            1     1      0   \n",
       "35140  20877       1     146    55.0    130      1            1     1      0   \n",
       "37169  14454       1     165    60.0    170     10            1     1      0   \n",
       "38370  23208       2     170    81.0    148      0            1     1      0   \n",
       "38599  18091       2     165    64.0    120      9            1     1      0   \n",
       "39896  18167       1     177    59.0    120     20            2     2      0   \n",
       "40650  14671       1     162    58.0    120     20            1     1      0   \n",
       "40961  19174       1     170    68.0    100     20            1     1      0   \n",
       "43307  22718       1     151    58.0    170     10            3     1      0   \n",
       "43922  18802       1     164    78.0    108      0            2     1      0   \n",
       "44609  22433       2     165    65.0    130     20            1     1      0   \n",
       "45835  19597       2     165    70.0    140      0            3     1      1   \n",
       "47711  21742       1     156   100.0    140     10            1     1      0   \n",
       "48049  19012       1     160    84.0    121      0            1     1      0   \n",
       "56927  18336       1     155    76.0     70     15            1     1      0   \n",
       "56950  15268       1     164    70.0    120      0            1     1      0   \n",
       "57641  20627       1     157    76.0    180     20            1     1      0   \n",
       "63787  14722       2     161    61.0    117      0            1     1      0   \n",
       "63828  16842       1     178    69.0    110     10            1     1      0   \n",
       "65303  23612       2     176    99.0    120      0            1     3      0   \n",
       "68223  18809       2     173   100.0    130     20            1     1      0   \n",
       "68568  15386       1     163    71.0    110      6            1     1      0   \n",
       "\n",
       "       alco  active  cardio  \n",
       "6737      0       0       1  \n",
       "7598      0       1       0  \n",
       "8797      0       1       0  \n",
       "9777      0       1       1  \n",
       "10106     0       1       1  \n",
       "11820     0       1       1  \n",
       "13489     0       0       0  \n",
       "13935     0       1       0  \n",
       "16459     0       1       1  \n",
       "17381     0       1       0  \n",
       "18898     0       1       0  \n",
       "18958     0       1       1  \n",
       "19075     0       1       0  \n",
       "20135     0       0       0  \n",
       "22380     0       1       1  \n",
       "22923     0       1       1  \n",
       "23305     0       0       0  \n",
       "24757     0       1       1  \n",
       "27686     1       1       1  \n",
       "28065     0       1       0  \n",
       "35140     0       0       0  \n",
       "37169     0       1       0  \n",
       "38370     0       1       0  \n",
       "38599     0       1       0  \n",
       "39896     0       1       1  \n",
       "40650     0       1       0  \n",
       "40961     0       1       0  \n",
       "43307     0       1       1  \n",
       "43922     0       1       0  \n",
       "44609     0       1       1  \n",
       "45835     0       1       0  \n",
       "47711     0       1       0  \n",
       "48049     0       0       1  \n",
       "56927     1       1       1  \n",
       "56950     0       1       0  \n",
       "57641     0       1       1  \n",
       "63787     0       1       0  \n",
       "63828     0       1       0  \n",
       "65303     0       1       1  \n",
       "68223     0       1       1  \n",
       "68568     0       1       0  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "low2=df[(df['ap_lo']<30)]\n",
    "low2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "41"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(low2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# drop rows with a diastolic blood pressure below 30 and above 200\n",
    "indexNames2=df[(df['ap_lo']<30) | (df['ap_lo']>200)].index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(indexNames2, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "68780"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>68780.000000</td>\n",
       "      <td>68780.000000</td>\n",
       "      <td>68780.000000</td>\n",
       "      <td>68780.000000</td>\n",
       "      <td>68780.000000</td>\n",
       "      <td>68780.000000</td>\n",
       "      <td>68780.000000</td>\n",
       "      <td>68780.000000</td>\n",
       "      <td>68780.000000</td>\n",
       "      <td>68780.000000</td>\n",
       "      <td>68780.000000</td>\n",
       "      <td>68780.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>19464.542178</td>\n",
       "      <td>1.348735</td>\n",
       "      <td>164.361791</td>\n",
       "      <td>74.123023</td>\n",
       "      <td>126.616255</td>\n",
       "      <td>81.378162</td>\n",
       "      <td>1.364728</td>\n",
       "      <td>1.225967</td>\n",
       "      <td>0.088005</td>\n",
       "      <td>0.053635</td>\n",
       "      <td>0.803388</td>\n",
       "      <td>0.494911</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2468.054449</td>\n",
       "      <td>0.476573</td>\n",
       "      <td>8.185021</td>\n",
       "      <td>14.331336</td>\n",
       "      <td>16.761737</td>\n",
       "      <td>9.687144</td>\n",
       "      <td>0.678984</td>\n",
       "      <td>0.571932</td>\n",
       "      <td>0.283305</td>\n",
       "      <td>0.225297</td>\n",
       "      <td>0.397440</td>\n",
       "      <td>0.499978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>10798.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>17657.750000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>159.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>19701.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>165.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>21324.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>170.000000</td>\n",
       "      <td>82.000000</td>\n",
       "      <td>140.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>23713.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>240.000000</td>\n",
       "      <td>190.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                age        gender        height        weight         ap_hi  \\\n",
       "count  68780.000000  68780.000000  68780.000000  68780.000000  68780.000000   \n",
       "mean   19464.542178      1.348735    164.361791     74.123023    126.616255   \n",
       "std     2468.054449      0.476573      8.185021     14.331336     16.761737   \n",
       "min    10798.000000      1.000000     55.000000     11.000000     70.000000   \n",
       "25%    17657.750000      1.000000    159.000000     65.000000    120.000000   \n",
       "50%    19701.000000      1.000000    165.000000     72.000000    120.000000   \n",
       "75%    21324.000000      2.000000    170.000000     82.000000    140.000000   \n",
       "max    23713.000000      2.000000    250.000000    200.000000    240.000000   \n",
       "\n",
       "              ap_lo   cholesterol          gluc         smoke          alco  \\\n",
       "count  68780.000000  68780.000000  68780.000000  68780.000000  68780.000000   \n",
       "mean      81.378162      1.364728      1.225967      0.088005      0.053635   \n",
       "std        9.687144      0.678984      0.571932      0.283305      0.225297   \n",
       "min       30.000000      1.000000      1.000000      0.000000      0.000000   \n",
       "25%       80.000000      1.000000      1.000000      0.000000      0.000000   \n",
       "50%       80.000000      1.000000      1.000000      0.000000      0.000000   \n",
       "75%       90.000000      2.000000      1.000000      0.000000      0.000000   \n",
       "max      190.000000      3.000000      3.000000      1.000000      1.000000   \n",
       "\n",
       "             active        cardio  \n",
       "count  68780.000000  68780.000000  \n",
       "mean       0.803388      0.494911  \n",
       "std        0.397440      0.499978  \n",
       "min        0.000000      0.000000  \n",
       "25%        1.000000      0.000000  \n",
       "50%        1.000000      0.000000  \n",
       "75%        1.000000      1.000000  \n",
       "max        1.000000      1.000000  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Data Visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 12 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot distribution of numeric features\n",
    "df.hist(figsize=(15,10))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    34740\n",
       "1    34040\n",
       "Name: cardio, dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# distribution of target values (column \"cardio\" has values 0 or 1 for the absence or presence of a cardiovascular disease)\n",
    "cardio_label = df['cardio'].value_counts()\n",
    "cardio_label"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    44794\n",
       "2    23986\n",
       "Name: gender, dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# distribution of gender\n",
    "gender = df['gender'].value_counts()\n",
    "gender"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualize distribution of labels\n",
    "fig = plt.figure(figsize=(7, 5))\n",
    "df['cardio'].value_counts().plot(kind='bar')\n",
    "plt.xticks(rotation=45)\n",
    "plt.ylabel('Number of occurences', fontsize=12, fontweight='bold')\n",
    "plt.xlabel('Absence (0) or Presence (1) of cardiovascular disease', fontsize=12, fontweight='bold')\n",
    "plt.title('Distribution of Label Types', fontsize=14, fontweight='bold')\n",
    "\n",
    "# export graphic for report\n",
    "plt.savefig(\"label_distribution.png\", bbox_inches = 'tight')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Plot pairplot to show correlation of features\n",
    "#sns.pairplot(df,diag_kind='auto')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Feature Engineering"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Standardize numerical features by subtracting the mean and scaling to unit variance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-0.434165</td>\n",
       "      <td>2</td>\n",
       "      <td>0.444496</td>\n",
       "      <td>-0.845910</td>\n",
       "      <td>-0.991321</td>\n",
       "      <td>-0.142267</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.309336</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.021597</td>\n",
       "      <td>0.758965</td>\n",
       "      <td>0.798470</td>\n",
       "      <td>0.890029</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.246162</td>\n",
       "      <td>1</td>\n",
       "      <td>0.077973</td>\n",
       "      <td>-0.706356</td>\n",
       "      <td>0.201873</td>\n",
       "      <td>-1.174563</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.746151</td>\n",
       "      <td>2</td>\n",
       "      <td>0.566670</td>\n",
       "      <td>0.549633</td>\n",
       "      <td>1.395067</td>\n",
       "      <td>1.922325</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.806523</td>\n",
       "      <td>1</td>\n",
       "      <td>-1.021597</td>\n",
       "      <td>-1.264573</td>\n",
       "      <td>-1.587917</td>\n",
       "      <td>-2.206859</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        age  gender    height    weight     ap_hi     ap_lo  cholesterol  \\\n",
       "0 -0.434165       2  0.444496 -0.845910 -0.991321 -0.142267            1   \n",
       "1  0.309336       1 -1.021597  0.758965  0.798470  0.890029            3   \n",
       "2 -0.246162       1  0.077973 -0.706356  0.201873 -1.174563            3   \n",
       "3 -0.746151       2  0.566670  0.549633  1.395067  1.922325            1   \n",
       "4 -0.806523       1 -1.021597 -1.264573 -1.587917 -2.206859            1   \n",
       "\n",
       "   gluc  smoke  alco  active  cardio  \n",
       "0     1      0     0       1       0  \n",
       "1     1      0     0       1       1  \n",
       "2     1      0     0       0       1  \n",
       "3     1      0     0       1       1  \n",
       "4     1      0     0       0       0  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "features_to_scale = [\"age\", \"height\", \"weight\", \"ap_hi\", \"ap_lo\"]\n",
    "def standardize(df):\n",
    "    scaled_df = df.copy(deep=True)\n",
    "    for column in features_to_scale:\n",
    "        scaled_df[column] = (scaled_df[column]-scaled_df[column].mean())/scaled_df[column].std()\n",
    "    return scaled_df \n",
    "\n",
    "\n",
    "scaled_df=standardize(df)\n",
    "scaled_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "# save cleaned dataset for exploration in Orange\n",
    "df.to_csv('cardio_cleanded.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Supervised Learning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Preparation of input data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Rerun algorithms with reduced feature set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(68780,)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# assign cardio column to target label\n",
    "y = scaled_df['cardio'] \n",
    "y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['age', 'gender', 'height', 'weight', 'ap_hi', 'ap_lo', 'cholesterol',\n",
       "       'gluc', 'smoke', 'alco', 'active', 'cardio'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scaled_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(68780, 11)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# assign all other feature columns to data X\n",
    "X = scaled_df[['age', 'gender', 'height', 'weight', 'ap_hi', 'ap_lo', 'cholesterol','gluc', 'smoke', 'alco', 'active']]\n",
    "X.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.14388787,  0.66282618,  0.14731178, ...,  0.        ,\n",
       "         0.        ,  0.33141309],\n",
       "       [ 0.07948671,  0.25695921, -0.26250871, ...,  0.        ,\n",
       "         0.        ,  0.25695921],\n",
       "       [-0.06831005,  0.27749993,  0.02163744, ...,  0.        ,\n",
       "         0.        ,  0.        ],\n",
       "       ...,\n",
       "       [-0.02699272,  0.33431596,  0.38063743, ...,  0.        ,\n",
       "         0.16715798,  0.        ],\n",
       "       [ 0.43134131,  0.35887038, -0.05970743, ...,  0.        ,\n",
       "         0.        ,  0.        ],\n",
       "       [ 0.15540382,  0.35663424,  0.24566563, ...,  0.        ,\n",
       "         0.        ,  0.35663424]])"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# normalize X\n",
    "X = normalize(X)\n",
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "# train-test-split of data \n",
    "X_train,X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Logistic Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "log_reg = LogisticRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_reg.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "# predictions using logistic regression\n",
    "log_reg_pred = log_reg.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy of Logistic regression model prediction on test set:0.73\n"
     ]
    }
   ],
   "source": [
    "print('Accuracy of Logistic regression model prediction on test set:{:.2f}'.format(log_reg.score(X_test, y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy of Logistic regression model prediction on test set:0.73\n"
     ]
    }
   ],
   "source": [
    "print('Accuracy of Logistic regression model prediction on test set:{:.2f}'.format(log_reg.score(X_train, y_train)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[5291 1584]\n",
      " [2159 4722]]\n"
     ]
    }
   ],
   "source": [
    "cm_log_reg = confusion_matrix(y_test, log_reg_pred)\n",
    "print(cm_log_reg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.71      0.77      0.74      6875\n",
      "           1       0.75      0.69      0.72      6881\n",
      "\n",
      "    accuracy                           0.73     13756\n",
      "   macro avg       0.73      0.73      0.73     13756\n",
      "weighted avg       0.73      0.73      0.73     13756\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, log_reg_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Support Vector Machine"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.71      0.77      0.74      6875\n",
      "           1       0.75      0.69      0.72      6881\n",
      "\n",
      "    accuracy                           0.73     13756\n",
      "   macro avg       0.73      0.73      0.73     13756\n",
      "weighted avg       0.73      0.73      0.73     13756\n",
      "\n",
      "Hinge loss 0.7686100610642629\n"
     ]
    }
   ],
   "source": [
    "# Support vector machine\n",
    "svc = SVC()\n",
    "svc.fit(X_train, y_train)\n",
    "svc_pred = svc.predict(X_test)\n",
    "print(classification_report(y_test,svc_pred))\n",
    "print(\"Hinge loss\", hinge_loss(y_test,svc_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy of SVM model prediction on training set:0.73\n"
     ]
    }
   ],
   "source": [
    "print('Accuracy of SVM model prediction on training set:{:.2f}'.format(svc.score(X_train, y_train)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy of SVM model prediction on test set:0.73\n"
     ]
    }
   ],
   "source": [
    "print('Accuracy of SVM model prediction on test set:{:.2f}'.format(svc.score(X_test, y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.70      0.80      0.74      6875\n",
      "           1       0.76      0.65      0.70      6881\n",
      "\n",
      "    accuracy                           0.72     13756\n",
      "   macro avg       0.73      0.72      0.72     13756\n",
      "weighted avg       0.73      0.72      0.72     13756\n",
      "\n",
      "Hinge loss 0.7748618784530387\n"
     ]
    }
   ],
   "source": [
    "# Support vector machine\n",
    "\n",
    "svc2 = SVC(kernel='linear', C=1, probability=True)\n",
    "svc2.fit(X_train, y_train)\n",
    "svc_pred2 = svc.predict(X_test)\n",
    "print(classification_report(y_test,svc_pred2))\n",
    "print(\"Hinge loss\", hinge_loss(y_test,svc_pred2))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy of SVM model prediction on test set:0.72\n"
     ]
    }
   ],
   "source": [
    "print('Accuracy of SVM model prediction on test set:{:.2f}'.format(svc2.score(X_test, y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Sequential backward selection (SBS) and KNN classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "# sequential feature selection (Algorithm from Sebastian Raschka & Vahid Mirjalili, Python Machine Lerning)\n",
    "\n",
    "class SBS():\n",
    "    def __init__(self, estimator, k_features, scoring=accuracy_score,\n",
    "                 test_size=0.25, random_state=1):\n",
    "        self.scoring = scoring\n",
    "        self.estimator = clone(estimator)\n",
    "        self.k_features = k_features\n",
    "        self.test_size = test_size\n",
    "        self.random_state = random_state\n",
    "\n",
    "    def fit(self, X, y):\n",
    "        \n",
    "        X_train, X_test, y_train, y_test = \\\n",
    "            train_test_split(X, y, test_size=self.test_size,\n",
    "                             random_state=self.random_state)\n",
    "\n",
    "        dim = X_train.shape[1]\n",
    "        self.indices_ = tuple(range(dim))\n",
    "        self.subsets_ = [self.indices_]\n",
    "        score = self._calc_score(X_train, y_train, \n",
    "                                 X_test, y_test, self.indices_)\n",
    "        self.scores_ = [score]\n",
    "\n",
    "        while dim > self.k_features:\n",
    "            scores = []\n",
    "            subsets = []\n",
    "\n",
    "            for p in combinations(self.indices_, r=dim - 1):\n",
    "                score = self._calc_score(X_train, y_train, \n",
    "                                         X_test, y_test, p)\n",
    "                scores.append(score)\n",
    "                subsets.append(p)\n",
    "\n",
    "            best = np.argmax(scores)\n",
    "            self.indices_ = subsets[best]\n",
    "            self.subsets_.append(self.indices_)\n",
    "            dim -= 1\n",
    "\n",
    "            self.scores_.append(scores[best])\n",
    "        self.k_score_ = self.scores_[-1]\n",
    "\n",
    "        return self\n",
    "\n",
    "    def transform(self, X):\n",
    "        return X[:, self.indices_]\n",
    "\n",
    "    def _calc_score(self, X_train, y_train, X_test, y_test, indices):\n",
    "        self.estimator.fit(X_train[:, indices], y_train)\n",
    "        y_pred = self.estimator.predict(X_test[:, indices])\n",
    "        score = self.scoring(y_test, y_pred)\n",
    "        return score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# implement k-nearest neighbor algorithm \n",
    "\n",
    "knn = KNeighborsClassifier(n_neighbors=5)\n",
    "\n",
    "# selecting features\n",
    "sbs = SBS(knn, k_features=1)\n",
    "sbs.fit(X_train, y_train)\n",
    "\n",
    "# plotting performance of feature subsets\n",
    "k_feat = [len(k) for k in sbs.subsets_]\n",
    "\n",
    "plt.plot(k_feat, sbs.scores_, marker='o')\n",
    "plt.ylim([0.0, 1.0])\n",
    "plt.ylabel('Accuracy')\n",
    "plt.xlabel('Number of features')\n",
    "plt.grid()\n",
    "plt.tight_layout()\n",
    "# plt.savefig('./sbs.png', dpi=300)\n",
    "#plt.show()\n",
    "\n",
    "# export graphic for report\n",
    "plt.savefig(\"sequential_feature_selection.png\", bbox_inches = 'tight')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training accuracy: 0.7844576911892992\n",
      "Test accuracy: 0.6950421634195987\n"
     ]
    }
   ],
   "source": [
    "# evaluate performance of KNN classifier on original test set\n",
    "knn.fit(X_train, y_train)\n",
    "print('Training accuracy:', knn.score(X_train, y_train))\n",
    "print('Test accuracy:', knn.score(X_test, y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Random Forest Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [],
   "source": [
    "rf_model = RandomForestClassifier(random_state=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(random_state=1)"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "rf_pred = rf_model.predict(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "rf_test_pred = rf_model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9997819133469031\n"
     ]
    }
   ],
   "source": [
    "print(accuracy_score(y_train, rf_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7122710090142483\n"
     ]
    }
   ],
   "source": [
    "print(accuracy_score(y_test, rf_test_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The model is overfitting. Try hyperparameter tuning."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Hyperparameter Tuning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Variation of parameters n_estimators and max_depth to reduce overfitting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(max_depth=10, max_features=0.7, min_samples_leaf=10,\n",
       "                       n_estimators=50, random_state=42)"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf_model2 = RandomForestClassifier(random_state=42,criterion = 'gini', n_estimators=50, max_depth=10, min_samples_leaf=10, max_features=0.7)\n",
    "rf_model2.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_preds = rf_model2.predict(X_train)\n",
    "test_preds = rf_model2.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_acc = accuracy_score(y_train, train_preds)\n",
    "test_acc = accuracy_score(y_test, test_preds)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.7627580692061646\n",
      "0.728990985751672\n"
     ]
    }
   ],
   "source": [
    "print(train_acc)\n",
    "print(test_acc)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Model is not overfitting anymore but the accuracy is low. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " 1) alco                          0.007432\n",
      " 2) smoke                         0.010731\n",
      " 3) active                        0.064632\n",
      " 4) gluc                          0.075398\n",
      " 5) gender                        0.076144\n",
      " 6) cholesterol                   0.087417\n",
      " 7) height                        0.093995\n",
      " 8) weight                        0.103011\n",
      " 9) age                           0.131049\n",
      "10) ap_lo                         0.133806\n",
      "11) ap_hi                         0.216385\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "feat_labels = df.columns[:-1]\n",
    "forest = RandomForestClassifier(n_estimators=500, random_state=1)\n",
    "\n",
    "forest.fit(X_train, y_train)\n",
    "importances = forest.feature_importances_\n",
    "\n",
    "indices = np.argsort(importances) [::1]\n",
    "\n",
    "for f in range(X_train.shape[1]):\n",
    "    print(\"%2d) %-*s%f\" % (f + 1, 30, \n",
    "                          feat_labels[indices[f]],\n",
    "                          importances[indices[f]]))\n",
    "    \n",
    "plt.title('Feature Importance')\n",
    "plt.bar(range(X_train.shape[1]),\n",
    "       importances[indices],\n",
    "       align='center')\n",
    "\n",
    "plt.xticks(range(X_train.shape[1]),\n",
    "          feat_labels[indices], rotation=90)\n",
    "\n",
    "plt.xlim([-1, X_train.shape[1]])\n",
    "plt.tight_layout()\n",
    "#plt.show()\n",
    "\n",
    "# export graphic for report\n",
    "plt.savefig(\"feature_importance.png\", bbox_inches = 'tight')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
